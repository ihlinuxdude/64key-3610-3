#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT 0
#define NUMBER  1
#define SYMBOL  2
#define HOTKEY  3

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <170>;
};

/ {
    behaviors {
     // 新增长按敏感的鼠标行为
     lclk_hold: left_click_hold {
        compatible = "zmk,behavior-hold-tap";
         label = "LCLK_HOLD";
        #binding-cells = <2>;
          tapping-term-ms = <200>;      // 长按判定时间
          quick-tap-ms = <150>;         // 快速点击判定
          flavor = "hold-preferred";     // 优先识别长按
          bindings = <&kp>, <&mkp LCLK>; // 短按触发键，长按触发鼠标左键
      };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mkp LCLK>, <&mkp LCLK>;
        };
    };



    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&mkp LCLK>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&mkp MCLK>;
        };

        combo_LSHFT {
            timeout-ms = <50>;
            key-positions = <38 39>;
            bindings = <&mkp RCLK>;
        };

        combo_2 {
            timeout-ms = <50>;
            key-positions = <>;
            bindings = <&kp N2 >;
        };

        combo_GUI {
            timeout-ms = <50>;
            key-positions = <>;
            bindings = <&tog 1>;
        };
    };

    macros {

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEFAULT";
            bindings = <
&lt 1 ESC  &kp N1  &kp N2     &kp N3    &kp N4     &kp N5        &kp N6  &kp N7   &kp N8     &kp N9    &kp N0    &lt 1 MINUS
&lt 2 TAB  &kp Q   &kp W      &kp E     &kp R      &kp T         &kp Y   &kp U    &kp I      &kp O     &kp P     &lt 2 EQUAL
&kp LSHFT  &kp A   &kp S      &kp D     &kp F      &kp G         &kp H   &kp J    &kp K      &kp L     &kp SEMI  &lt 3 SQT
&kp CAPS   &kp Z   &kp X      &kp C     &kp V      &kp B         &kp N   &kp M    &kp COMMA  &kp DOT   &kp FSLH  &kp BSLH
                   &kp GRAVE  &kp LGUI  &kp BSPC   &kp SPACE     &none   &kp RET  &kp LBKT   &kp RBKT
                   &kp LALT   &kp LALT  &kp LCTRL  &lt 3 DELETE  &none   &none    &mo 1      &kp LALT
            >;
        };

        number_layer {
            label = "NUMBER";
            bindings = <
&trans  &none  &kp F10         &kp F11  &kp F12  &none   &none   &none      &kp FSLH   &kp STAR        &kp MINUS  &none
&trans  &none  &kp F7          &kp F8   &kp F9   &none   &none   &kp KP_N7  &kp KP_N8  &kp KP_N9       &kp PLUS   &none
&trans  &none  &kp F4          &kp F5   &kp F6   &none   &none   &kp KP_N4  &kp KP_N5  &kp KP_N6       &kp ENTER  &kp RET
&trans  &none  &kp F1          &kp F2   &kp F3   &none   &none   &kp KP_N1  &kp KP_N2  &kp KP_N3       &kp ENTER  &kp ENTER
               &trans          &trans   &trans   &trans  &none   &none      &kp KP_N0  &kp KP_DOT
               &studio_unlock  &none    &trans   &trans  &kp N1  &kp N1     &kp N1     &studio_unlock
            >;
        };

        symbol_layer {
            label = "SYMBOL";
            bindings = <
&bt BT_SEL 0  &none  &none  &none  &none  &bt BT_CLR    &bt BT_CLR    &none  &none  &none  &none  &bt BT_SEL 0
&none         &none  &none  &none  &none  &out OUT_USB  &out OUT_USB  &none  &none  &none  &none  &none
&bootloader   &none  &none  &none  &none  &out OUT_BLE  &out OUT_BLE  &none  &none  &none  &none  &bootloader
&sys_reset    &none  &none  &none  &none  &none         &none         &none  &none  &none  &none  &sys_reset
                     &none  &none  &none  &none         &none         &none  &none  &none
                     &none  &none  &none  &none         &none         &none  &none  &none
            >;
        };

        hotkey_layer {
            label = "HOTKEY";
            bindings = <
&kp N3  &kp N3     &kp N3          &kp N3     &kp N3  &kp N3  &kp N3     &kp N3  &kp N3          &kp N3  &kp N3  &kp N3
&none   &none      &msc SCRL_UP    &none      &none   &none   &none      &none   &none           &none   &none   &none
&none   &mkp LCLK  &mkp MCLK       &mkp RCLK  &none   &none   &none      &none   &msc SCRL_UP    &none   &none   &none
&none   &none      &msc SCRL_DOWN  &none      &none   &none   &mkp LCLK  &none   &msc SCRL_DOWN  &none   &none   &none
                   &none           &none      &none   &none   &none      &none   &none           &none
                   &none           &none      &none   &none   &none      &none   &none           &none
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
